# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

##################################
##       Apperance Setting      ##
##################################

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod1

# reload / restart / exit i3
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 3
default_floating_border normal

# Hide borders
hide_edge_borders none

# Font for window titles.
font xft:URWGothic-Book 11

# start a terminal
bindsym $mod+Return exec alacritty

# change borders
bindsym $mod+t border normal
bindsym $mod+y border pixel 3
bindsym $mod+u border none

# Screen brightness controls
bindsym XF86MonBrightnessUp   exec "xbacklight -inc 10; notify-send 'brightness up'"
bindsym XF86MonBrightnessDown exec "xbacklight -dec 10; notify-send 'brightness down'"

##################################
##         Auto Startup         ##
##################################

# xss-lock can lock the screen before suspend.
# ISSUE: logind needs DE. see: https://bbs.archlinux.org/viewtopic.php?id=242814
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id xautolock -time 30 -locker "i3lock -c 000000; systemctl suspend"
exec --no-startup-id setxkbmap -option "ctrl:nocaps" -option "compose:lwin"
exec --no-startup-id feh --randomize --bg-fill ~/Downloads/Wallpapers
exec --no-startup-id picom -b
exec --no-startup-id clipit
# exec --no-startup-id caffeine
# exec --no-startup-id blueman-applet
exec --no-startup-id fcitx5
exec --no-startup-id emacs --daemon
# exec --no-startup-id fluxgui

##################################
##      Workspaces Control      ##
##################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8

# Open applications on specific workspaces
assign [class="firefox"] $ws2
assign [class="tim"] $ws2
# assign [class="Pcmanfm"] $ws3

##################################
##        Window Control        ##
##################################

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier Mod4

# kill focused window
bindsym $mod+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+Left  focus left
bindsym $mod+Down  focus down
bindsym $mod+Up    focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
bindsym $mod+Shift+Left  move left
bindsym $mod+Shift+Down  move down
bindsym $mod+Shift+Up    move up
bindsym $mod+Shift+Right move right

# split orientation
bindsym $mod+d       split h;exec notify-send 'tile horizontally'
bindsym $mod+Shift+d split v;exec notify-send 'tile vertically'

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
# bindsym $mod+e layout toggle split

# toggle sticky, which makes the floating window stay on screen
# even if you switch to another workspace
bindsym $mod+Shift+s sticky toggle

# enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen toggle

# toggle tiling / floating
bindsym $mod+o floating toggle

# change focus between tiling / floating windows
bindsym $mod+g focus mode_toggle

# focus the parent / child container
# bindsym $mod+a focus parent
# bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+grave move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+grave scratchpad show

# resize window (you can also use the mouse for that)
bindsym $mod+Mod4+h resize shrink width 5px or 5 ppt
bindsym $mod+Mod4+j resize grow height 5px or 5 ppt
bindsym $mod+Mod4+k resize shrink height 5px or 5 ppt
bindsym $mod+Mod4+l resize grow width 5px or 5 ppt

bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym h resize shrink width  10 px or 10 ppt
        bindsym j resize grow   height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow   width  10 px or 10 ppt
        bindsym Left  resize shrink width  10 px or 10 ppt
        bindsym Down  resize grow   height 10 px or 10 ppt
        bindsym Up    resize shrink height 10 px or 10 ppt
        bindsym Right resize grow   width  10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

# Open specific applications in floating mode
for_window [title="Library"] floating enable
for_window [title="alsamixer"] floating enable border pixel 0
for_window [title="ranger"] floating enable border normal
for_window [class="fcitx5"] floating enable
for_window [title="Character Map"] floating enable

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

##################################
## Application Keyboard Binding ##
##################################

# Lock screen
bindsym $mod+9 exec --no-startup-id i3lock -c 000000

# Shut down, Restart and Locking 
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (s)uspend, (e)xit, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
	bindsym l exec --no-startup-id i3lock -c 000000, mode "default"
	bindsym s exec --no-startup-id systemctl suspend, mode "default"
	bindsym e exec --no-startup-id i3-msg exit, mode "default"
	bindsym r exec --no-startup-id reboot, mode "default"
	bindsym Shift+s exec --no-startup-id shutdown -h now, mode "default"

	# exit system mode: "Enter" or "Escape"
	bindsym Return mode "default"
	bindsym Escape mode "default"
}

# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% # && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% # && $refresh_i3status
bindsym XF86AudioMute        exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle # && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle # && $refresh_i3status

# start program launcher
bindsym $mod+space exec --no-startup-id "rofi -combi-modi window,drun,ssh -show combi -modi combi"

# launch categorized menu
# bindsym $mod+grave exec --no-startup-id morc_menu

# Start Applications
bindsym $mod+F2 exec firefox
bindsym $mod+F3 exec alacritty -t 'ranger' -e 'ranger'
# bindsym $mod+F5 exec terminal -e 'mocp'
bindsym $mod+F6 exec alacritty -t 'alsamixer' -e 'alsamixer'
bindsym $mod+Mod4+minus --release exec "killall dunst; exec notify-send 'restart dunst'"
bindsym Print exec --no-startup-id i3-scrot
bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s

##################################
##          Bar Setting         ##
##################################

# Start i3bar to display a workspace bar
bar {
	i3bar_command i3bar
	status_command i3status
	position bottom
}

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner  9
gaps outer -2

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

